server {
    listen 8000 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    root /usr/share/nginx/html;

    location /profile_pictures/ {
        alias /usr/share/nginx/html/profile_pictures/;  # Match with the Nginx volume path
    }
    
    location /kibana/ {
            proxy_pass http://kibana:5601/;  # Ensure there's a trailing slash
            proxy_set_header Host $host; 
        }

    location /grafana {
        proxy_set_header Host $host;  # Preserve the Host header
        proxy_pass http://grafana:3000;  # Forward requests to Grafana container
    }

    location / {
        try_files $uri $uri/ /index.html;
    }

    error_page 404 /index.html;

    location /api {
        proxy_pass http://gateway:8000;  
        proxy_set_header Host $host;  # Preserve the Host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original IP address
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http/https)
        proxy_pass_header Set-Cookie;
    }

    location /ws/ {
        proxy_pass http://gateway:8000;  # Django WebSocket backend
        proxy_http_version 1.1;  # WebSocket requires HTTP/1.1
        proxy_set_header Upgrade $http_upgrade;  # Handle WebSocket upgrade
        proxy_set_header Connection "upgrade";  # Required for WebSocket connections
        proxy_set_header Host $host;  # Forward the host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original IP
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http or https)
    }
    location /socket-io-admin {
        return 301 https://$host:4000$request_uri;
    }
}

server{
	listen 8545 ;
	server_name localhost;
    location / {
        proxy_pass http://blockchain:8545;   # Route to the Ganache container
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Rewrite the URL to strip /ganache prefix
        rewrite ^/ganache(.*)$ $1 break;
    }
}
server{
	listen 5555;
	server_name localhost;
    location / {
        proxy_set_header Host $host;  # Preserve the Host header
        proxy_pass http://flower:5555;  # Forward requests to flower container
    }

}
